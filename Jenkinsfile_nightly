#!groovy

properties([
        // H allow predefined but random minute see https://en.wikipedia.org/wiki/Cron#Non-standard_characters
        //LAU-524 (Stop running Nightly builds on weekends). Original schedule was 'H 05 * * *'
        pipelineTriggers([cron('H 07 * * 1-5')]),
        parameters([
                string(name: 'URL_TO_TEST', defaultValue: 'http://lau-idam-backend-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
                string(name: 'SecurityRules',
                        defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                        description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure")

def type = "java"
def product = "lau"
def component = "idam-backend"

def secrets = [
        'lau-${env}': [
                secret('idam-backend-POSTGRES-USER', 'FLYWAY_USER'),
                secret('idam-backend-POSTGRES-PASS', 'LAU_IDAM_DB_ADMIN_PASSWORD'),
                secret('idam-backend-POSTGRES-PASS', 'FLYWAY_PASSWORD'),
                secret('idam-backend-app-db-password', 'FLYWAY_PLACEHOLDERS_LAU_IDAM_DB_PASSWORD'),
                secret('idam-backend-app-db-password', 'LAU_IDAM_DB_PASSWORD'),
                secret('backend-encryption-key', 'LAU_IDAM_ENCRYPTION_KEY'),
                secret( 'idam-client-secret', 'IDAM_CLIENT_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withNightlyPipeline(type, product, component) {

    env.TEST_URL = params.URL_TO_TEST
    env.TEST_S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
    env.TEST_IDAM_API_URL = 'https://idam-api.aat.platform.hmcts.net'
    env.TEST_IDAM_CLIENT_REDIRECT_URI = 'https://lau-idam-backend-aat.service.core-compute-aat.internal/oauth2/callback'
    env.TEST_IDAM_CLIENT_NAME = 'lau'
    env.Rules = params.SecurityRules

    loadVaultSecrets(secrets)
    enableSlackNotifications('#lau-builds')
    enableMutationTest()
    enableFullFunctionalTest()
    enableFortifyScan()

    afterAlways('fortify-scan') {
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'

      // executing Groovy commands in Jenkins is not allowed therefore a workaround
      // to run security scan on 16th day of every month
      currentDay = sh(returnStdout: true, script: 'date "+%d"').trim()
      if (currentDay == '16') {
        enableSecurityScan()
      }
    }

    afterAlways('fullFunctionalTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'target/**/*'
    }

    afterAlways('mutationTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    afterAlways('securityScan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

}
